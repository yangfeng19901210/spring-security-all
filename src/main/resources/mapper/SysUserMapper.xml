<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yf.springsecurityall.mapper.SysUserMapper">

    <resultMap type="com.yf.springsecurityall.entity.User" id="SysUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="realname" column="realname" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="createDate" column="create_date" jdbcType="TIMESTAMP"/>
        <result property="lastLoginTime" column="last_login_time" jdbcType="TIMESTAMP"/>
        <result property="enabled" column="enabled" jdbcType="INTEGER"/>
        <result property="accountNonExpired" column="account_non_expired" jdbcType="INTEGER"/>
        <result property="accountNonLocked" column="account_non_locked" jdbcType="INTEGER"/>
        <result property="credentialsNonExpired" column="credentials_non_expired" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.yf.springsecurityall.entity.SysPermission" id="SysPermissionMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="permName" column="perm_name" jdbcType="VARCHAR"/>
        <result property="permTag" column="perm_tag" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
    </resultMap>


    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sys_user(username, realname, password, create_date, last_login_time, enabled, account_non_expired,
                             account_non_locked, credentials_non_expired)
        values (#{username}, #{realname}, #{password}, #{createDate}, #{lastLoginTime}, #{enabled},
                #{accountNonExpired}, #{accountNonLocked}, #{credentialsNonExpired})
    </insert>

    <sql id="columnSql" >
        id,username, realname, password, create_date, last_login_time, enabled, account_non_expired,
                             account_non_locked, credentials_non_expired
    </sql>


    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from sys_user
        where id = #{id}
    </delete>

    <select id="getUserByUsername" resultMap="SysUserMap">
        select
        <include refid="columnSql"></include>
         from sys_user
         <where>
             and username = #{username}
         </where>
    </select>

    <!-- 根据用户账号查询对应的权限   -->
    <select id="getPermsByUsername" resultMap="SysPermissionMap">
        SELECT
            p.id,
            p.perm_name,
            p.perm_tag,
            p.url
        FROM
            sys_permission p
                JOIN sys_role_permission rp ON p.id = rp.perm_id
                JOIN sys_role r ON rp.role_id = r.id
                JOIN sys_user_role ur on r.id = ur.role_id
                JOIN sys_user u on ur.user_id = u.id
        WHERE
            u.username = #{username}
    </select>

</mapper>

